api_create(korelacja_wpn, "Korelacja WPN")
korelacja_wpn <- ggplot(dane_wpn, aes(x = temp, y = ndvi, color = ndvi)) +
geom_point(shape = 21, size = 2, show.legend = FALSE) +
labs(title = "Korelacja wskaźnika NDVI z temperaturą gruntu dla WPN",
x = "Temperatura [°C]",
y = "NDVI") +
geom_smooth(method = lm, color="darkred") +
geom_abline(color = 'grey') +  style + scale_color_gradient2(midpoint= mean(dane_miasto$ndvi), low="#e63900", mid = "#ffff66",  high="#00802b")
korelacja_wpn <- korelacja_wpn %>%
style(text = paste('<span style = " font-weight:bold"> Wartość NDVI: </span>',
'<span style = " color:#ffffff">', dane_wpn$ndvi ,'</span>',
'</br></br><span style = "font-weight:bold"> Temperatura [°C]: </span>',
'<span style = " color:#ffffff">', dane_wpn$temp ,'</span>'), traces = 1) %>%
style(text = "linia regresji", traces = 2)
ggplotly(korelacja_wpn)
object.size(korelacja_wpn)
api_create(korelacja_wpn, "Korelacja WPN")
library(tmap)
library(raster)
library(rgdal)
library(ggplot2)
library(plotly)
library(spatialEco)
library(dplyr)
# wczytanie rastrów
ndvi_miedzyzdroje <- raster("dane/miedzyzdroje_ndvi.tif")
temp_miedzyzdroje <- raster("dane/miedzyzdroje_temp.tif")
ndvi_WPN <- raster("dane/WPN_ndvi.tif")
temp_WPN <- raster("dane/WPN_temp.tif")
# zapisanie rastra do ramki danych
ndvi_miedzyzdroje_dt <- values(ndvi_miedzyzdroje)
ndvi_miedzyzdroje_dt <- as.data.frame(ndvi_miedzyzdroje_dt) %>% na.omit()
colnames(ndvi_miedzyzdroje_dt) <- "ndvi"
temp_miedzyzdroje_dt <- values(temp_miedzyzdroje)
temp_miedzyzdroje_dt <- as.data.frame(temp_miedzyzdroje_dt) %>% na.omit
colnames(temp_miedzyzdroje_dt) <- "temp"
ndvi_WPN_dt <- values(ndvi_WPN)
ndvi_WPN_dt <- as.data.frame(ndvi_WPN_dt) %>% na.omit()
colnames(ndvi_WPN_dt) <- "ndvi"
temp_WPN_dt <- values(temp_WPN)
temp_WPN_dt <- as.data.frame(temp_WPN_dt) %>% na.omit()
colnames(temp_WPN_dt) <- "temp"
# styl wykresow
style <- theme(
text = element_text(family = "Trebuchet MS"),
panel.grid.major.x = element_blank(),
plot.background = element_rect(fill = "#222222"),
panel.background = element_rect(fill = "#222222"),
axis.title = element_text(size = 12,
color = "#dddddd"),
plot.title = element_text(size = 14,
color = "#dddddd",
vjust = 2,
hjust = 0.5),
legend.background = element_rect(color = "#222222",
fill = "#777777"),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
axis.text = element_text(size = 10,
color = "#dddddd"),
axis.text.x = element_text(angle = 60, vjust = 0.95, hjust=1))
# korelacja dla obszaru Miedzyzdrojow
cor(temp_miedzyzdroje_dt, ndvi_miedzyzdroje_dt, method = "pearson")
dane <- temp_WPN_dt
dane$ndvi <- ndvi_WPN_dt$ndvi_WPN_dt
dane_miasto <- round(temp_miedzyzdroje_dt, 1)
dane_miasto$ndvi <- round(ndvi_miedzyzdroje_dt$ndvi, 2)
object.size(dane_miasto)
# wyodrebnienie polowy danych ze wzgledu na zbyt duzy rozmiar pliku do eksportu
dane_miasto <- as.data.frame(dane_miasto)
dane_miasto <- dane_miasto[seq(1, nrow(dane_miasto), 3.2), ]
dane_miasto <- as.data.frame(dane_miasto)
colnames(dane_miasto) <- c("temp", "ndvi")
korelacja_miedzyzdroje <- ggplot(dane_miasto, aes(x = temp, y = ndvi, color = ndvi)) +
geom_point(shape = 21, size = 2, show.legend = FALSE) +
scale_x_continuous(breaks = c(20, 25, 30, 35)) +
geom_smooth(method = lm, color="darkred") +
labs(title = "Korelacja wskaźnika NDVI z temperaturą gruntu dla Międzydzrojów",
x = "Temperatura [°C]",
y = "NDVI") +
geom_abline(color = 'grey') +  style + scale_color_gradient2(midpoint=mean(dane_miasto$ndvi), low="#e63900", mid = "#ffff66",  high="#00802b")
korelacja_miedzyzdroje <- korelacja_miedzyzdroje %>%
style(text = paste('<span style = " font-weight:bold"> Wartość NDVI: </span>',
'<span style = " color:#ffffff">', dane_miasto$ndvi ,'</span>',
'</br></br><span style = "font-weight:bold"> Temperatura [°C]: </span>',
'<span style = " color:#ffffff">', dane_miasto$temp ,'</span>'), traces = 1) %>%
style(text = "linia regresji", traces = 2)
ggplotly(korelacja_miedzyzdroje)
# styl wykresow
style <- theme(
text = element_text(family = "Trebuchet MS"),
panel.grid.major.x = element_blank(),
plot.background = element_rect(fill = "#222222"),
panel.background = element_rect(fill = "#222222"),
axis.title = element_text(size = 12,
color = "#dddddd"),
plot.title = element_text(size = 14,
color = "#dddddd",
vjust = 2,
hjust = 0.5),
legend.background = element_rect(color = "#222222",
fill = "#777777"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 12),
axis.text = element_text(size = 10,
color = "#dddddd"),
axis.text.x = element_text(angle = 60, vjust = 0.95, hjust=1))
# styl wykresow
style <- theme(
text = element_text(family = "Trebuchet MS"),
panel.grid.major.x = element_blank(),
plot.background = element_rect(fill = "#222222"),
panel.background = element_rect(fill = "#222222"),
axis.title = element_text(size = 12,
color = "#dddddd"),
plot.title = element_text(size = 14,
color = "#dddddd",
vjust = 2,
hjust = 0.5),
legend.background = element_rect(color = "#222222",
fill = "#777777"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 12),
axis.text = element_text(size = 10,
color = "#dddddd"),
axis.text.x = element_text(angle = 60, vjust = 0.95, hjust=1))
korelacja_miedzyzdroje <- ggplot(dane_miasto, aes(x = temp, y = ndvi, color = ndvi)) +
geom_point(shape = 21, size = 2, show.legend = FALSE) +
scale_x_continuous(breaks = c(20, 25, 30, 35)) +
geom_smooth(method = lm, color="darkred") +
labs(title = "Korelacja wskaźnika NDVI z temperaturą gruntu dla Międzydzrojów",
x = "Temperatura [°C]",
y = "NDVI") +
geom_abline(color = 'grey') +  style + scale_color_gradient2(midpoint=mean(dane_miasto$ndvi), low="#e63900", mid = "#ffff66",  high="#00802b")
korelacja_miedzyzdroje <- korelacja_miedzyzdroje %>%
style(text = paste('<span style = " font-weight:bold"> Wartość NDVI: </span>',
'<span style = " color:#ffffff">', dane_miasto$ndvi ,'</span>',
'</br></br><span style = "font-weight:bold"> Temperatura [°C]: </span>',
'<span style = " color:#ffffff">', dane_miasto$temp ,'</span>'), traces = 1) %>%
style(text = "linia regresji", traces = 2)
ggplotly(korelacja_miedzyzdroje)
# styl wykresow
style <- theme(
text = element_text(family = "Trebuchet MS"),
panel.grid.major.x = element_blank(),
plot.background = element_rect(fill = "#222222"),
panel.background = element_rect(fill = "#222222"),
axis.title = element_text(size = 12,
color = "#dddddd"),
plot.title = element_text(size = 11,
color = "#dddddd",
vjust = 2,
hjust = 0.5),
legend.background = element_rect(color = "#222222",
fill = "#777777"),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
axis.text = element_text(size = 10,
color = "#dddddd"),
axis.text.x = element_text(angle = 60, vjust = 0.95, hjust=1))
korelacja_miedzyzdroje <- ggplot(dane_miasto, aes(x = temp, y = ndvi, color = ndvi)) +
geom_point(shape = 21, size = 2, show.legend = FALSE) +
scale_x_continuous(breaks = c(20, 25, 30, 35)) +
geom_smooth(method = lm, color="darkred") +
labs(title = "Korelacja wskaźnika NDVI z temperaturą gruntu dla Międzydzrojów",
x = "Temperatura [°C]",
y = "NDVI") +
geom_abline(color = 'grey') +  style + scale_color_gradient2(midpoint=mean(dane_miasto$ndvi), low="#e63900", mid = "#ffff66",  high="#00802b")
korelacja_miedzyzdroje <- korelacja_miedzyzdroje %>%
style(text = paste('<span style = " font-weight:bold"> Wartość NDVI: </span>',
'<span style = " color:#ffffff">', dane_miasto$ndvi ,'</span>',
'</br></br><span style = "font-weight:bold"> Temperatura [°C]: </span>',
'<span style = " color:#ffffff">', dane_miasto$temp ,'</span>'), traces = 1) %>%
style(text = "linia regresji", traces = 2)
ggplotly(korelacja_miedzyzdroje)
dane_wpn<- round(temp_WPN_dt, 1)
dane_wpn$ndvi <- round(ndvi_WPN_dt$ndvi, 2)
object.size(dane_wpn)
# wyodrebnienie polowy danych ze wzgledu na zbyt duzy rozmiar pliku do eksportu
dane_wpn <- as.data.frame(dane_wpn)
dane_wpn <- dane_wpn[seq(1, nrow(dane_wpn), 45.5), ]
dane_wpn <- as.data.frame(dane_wpn)
colnames(dane_wpn) <- c("temp", "ndvi")
korelacja_wpn <- ggplot(dane_wpn, aes(x = temp, y = ndvi, color = ndvi)) +
geom_point(shape = 21, size = 2, show.legend = FALSE) +
labs(title = "Korelacja wskaźnika NDVI z temperaturą gruntu dla WPN",
x = "Temperatura [°C]",
y = "NDVI") +
geom_smooth(method = lm, color="darkred") +
geom_abline(color = 'grey') +  style + scale_color_gradient2(midpoint= mean(dane_miasto$ndvi), low="#e63900", mid = "#ffff66",  high="#00802b")
korelacja_wpn <- korelacja_wpn %>%
style(text = paste('<span style = " font-weight:bold"> Wartość NDVI: </span>',
'<span style = " color:#ffffff">', dane_wpn$ndvi ,'</span>',
'</br></br><span style = "font-weight:bold"> Temperatura [°C]: </span>',
'<span style = " color:#ffffff">', dane_wpn$temp ,'</span>'), traces = 1) %>%
style(text = "linia regresji", traces = 2)
ggplotly(korelacja_wpn)
object.size(korelacja_wpn)
Sys.setenv("plotly_username" = "adryanqe")
Sys.setenv("plotly_api_key" = "BWYeEqc9Tcu65gh28WEw")
api_create(korelacja_wpn, "Korelacja WPN")
api_create(korelacja_miedzyzdroje, "Korelacja Miedzyzdroje")
library(tmap)
library(raster)
library(rgdal)
library(ggplot2)
library(plotly)
library(spatialEco)
library(dplyr)
stats_ndvi <- read.csv("statystyki/statystyki_ndvi.csv")
stats_temp <- read.csv("statystyki/statystyki_temp.csv")
stats_temp <- read.csv("statystyki/statystyki_temperatura.csv")
View(stats_ndvi)
stats_ndvi <- read.csv("statystyki/statystyki_ndvi.csv", sep = ";", encoding = "utf-8")
stats_temp <- read.csv("statystyki/statystyki_temperatura.csv", sep = ";", encoding = "utf-8")
View(stats_ndvi)
stats_ndvi <- read.csv("statystyki/statystyki_ndvi.csv", sep = ";", encoding = "UTF-8")
stats_temp <- read.csv("statystyki/statystyki_temperatura.csv", sep = ";", encoding = "UTF-8")
stats_ndvi %>% mutate(across(where(is.numeric), round, 2))
stats_ndvi <- stats_ndvi %>% mutate(across(where(is.numeric), round, 2))
stats_temp <- stats_temp %>% mutate(across(where(is.numeric), round, 2))
View(stats_temp)
install.packages("reactable")
library(reactable)
reactable(stats_ndvi)
#install.packages("reactable")
#library(reactable)
library(DT)
datatable(stats_ndvi)
#install.packages("reactable")
#library(reactable)
library(kableExtra)
kbl(stats_ndvi)
kbl(stats_ndvi) %>% kable_material_dark()
reactable(stats_ndvi)
reactable(stats_temp)
stats_ndvi <- stats_ndvi[2:4, 6:8]
stats_temp <- stats_temp[2:4, 6:8]
reactable(stats_temp)
stats_ndvi <- stats_ndvi[1:5, 6:8]
stats_ndvi <- read.csv("statystyki/statystyki_ndvi.csv", sep = ";", encoding = "UTF-8")
stats_temp <- read.csv("statystyki/statystyki_temperatura.csv", sep = ";", encoding = "UTF-8")
stats_ndvi <- stats_ndvi %>% mutate(across(where(is.numeric), round, 2))
stats_ndvi <- stats_ndvi[1:5, 6:8]
stats_temp <- stats_temp[1:5, 6:8]
reactable(stats_temp)
stats_temp <- read.csv("statystyki/statystyki_temperatura.csv", sep = ";", encoding = "UTF-8")
stats_temp <- stats_temp %>% mutate(across(where(is.numeric), round, 2))
reactable(stats_temp)
stats_ndvi <- read.csv("statystyki/statystyki_ndvi.csv", sep = ";", encoding = "UTF-8")
stats_temp <- read.csv("statystyki/statystyki_temperatura.csv", sep = ";", encoding = "UTF-8")
stats_ndvi <- stats_ndvi %>% mutate(across(where(is.numeric), round, 2))
stats_ndvi <- stats_ndvi[c(2:4, 6:8), ]
stats_temp <- stats_temp %>% mutate(across(where(is.numeric), round, 2))
stats_temp <- stats_temp[c(2:4, 6:8),]
reactable(stats_temp)
stats_temp <- read.csv("statystyki/statystyki_temperatura.csv", sep = ";", encoding = "UTF-8")
stats_temp <- stats_temp %>% mutate(across(where(is.numeric), round, 2))
stats_temp <- stats_temp[-c[1, 3, 6],]
stats_temp <- stats_temp[-c(1, 3, 6),]
reactable(stats_temp)
stats_temp <- read.csv("statystyki/statystyki_temperatura.csv", sep = ";", encoding = "UTF-8")
stats_temp <- stats_temp %>% mutate(across(where(is.numeric), round, 2))
stats_temp <- stats_temp[, -c(1, 3, 6)]
reactable(stats_temp)
stats_temp <- read.csv("statystyki/statystyki_temperatura.csv", sep = ";", encoding = "UTF-8")
stats_temp <- stats_temp %>% mutate(across(where(is.numeric), round, 2))
reactable(stats_temp)
stats_ndvi <- read.csv("statystyki/statystyki_ndvi.csv", sep = ";", encoding = "UTF-8")
stats_temp <- read.csv("statystyki/statystyki_temperatura.csv", sep = ";", encoding = "UTF-8")
stats_ndvi <- stats_ndvi %>% mutate(across(where(is.numeric), round, 2))
stats_ndvi <- stats_ndvi[, -c(1, 5, 9)]
stats_temp <- stats_temp %>% mutate(across(where(is.numeric), round, 2))
stats_temp <- stats_temp[, -c(1, 5, 9)]
reactable(stats_temp)
plotly(stats_temp)
ggplotly(stats_temp)
a <- reactable(stats_temp)
ggplotly(a)
Sys.setenv("plotly_username" = "adryanqe")
Sys.setenv("plotly_api_key" = "BWYeEqc9Tcu65gh28WEw")
api_create(a, "a")
save_reactable(stats_temp, "stats_temp.html")
install.packages("reactablefmtr")
library(reactablefmtr)
save_reactable(stats_temp, "stats_temp.html")
library(reactablefmtr)
save_reactable(stats_temp, "stats_temp.html")
library(tmap)
library(raster)
library(rgdal)
library(ggplot2)
library(plotly)
library(spatialEco)
library(dplyr)
# wczytanie rastrów
ndvi_miedzyzdroje <- raster("dane/miedzyzdroje_ndvi.tif")
temp_miedzyzdroje <- raster("dane/miedzyzdroje_temp.tif")
ndvi_WPN <- raster("dane/WPN_ndvi.tif")
temp_WPN <- raster("dane/WPN_temp.tif")
# podglad warstwy
tm_shape(ndvi_miedzyzdroje) + tm_raster()
# zapisanie rastra do ramki danych
ndvi_miedzyzdroje_dt <- values(ndvi_miedzyzdroje)
ndvi_miedzyzdroje_dt <- as.data.frame(ndvi_miedzyzdroje_dt) %>% na.omit()
colnames(ndvi_miedzyzdroje_dt) <- "ndvi"
temp_miedzyzdroje_dt <- values(temp_miedzyzdroje)
temp_miedzyzdroje_dt <- as.data.frame(temp_miedzyzdroje_dt) %>% na.omit
colnames(temp_miedzyzdroje_dt) <- "temp"
ndvi_WPN_dt <- values(ndvi_WPN)
ndvi_WPN_dt <- as.data.frame(ndvi_WPN_dt) %>% na.omit()
colnames(ndvi_WPN_dt) <- "ndvi"
temp_WPN_dt <- values(temp_WPN)
temp_WPN_dt <- as.data.frame(temp_WPN_dt) %>% na.omit()
colnames(temp_WPN_dt) <- "temp"
# styl wykresow
style <- theme(
text = element_text(family = "Trebuchet MS"),
panel.grid.major.x = element_blank(),
plot.background = element_rect(fill = "#222222"),
panel.background = element_rect(fill = "#222222"),
axis.title = element_text(size = 12,
color = "#dddddd"),
plot.title = element_text(size = 11,
color = "#dddddd",
vjust = 2,
hjust = 0.5),
legend.background = element_rect(color = "#222222",
fill = "#777777"),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
axis.text = element_text(size = 10,
color = "#dddddd"),
axis.text.x = element_text(angle = 60, vjust = 0.95, hjust=1))
# Stworzenie histogramu NDVI dla Miedzyzdrojow
hist_ndvi_miedzyzdroje <- ggplotly(
ggplot_build(
ndvi_miedzyzdroje_dt %>%
ggplot(aes(x=ndvi)) +
geom_histogram(bins = 40)
)$data[[1]] %>%
ggplot(aes(x=x, y = count, text = paste('<span style = " font-weight:bold"> Liczba: </span>',
'<span>', count ,'</span>',
'</br></br><span style = " font-weight:bold"> Wartość NDVI: </span>',
'<span>', round(x, 2) ,'</span>'))) +
geom_bar(stat="identity", fill = hcl.colors(40, palette = "RdYlGn")) + style +
labs(title = "Rozkład wartości wskaźnika NDVI dla Międzyzdrojów", x = "Wskaźnik NDVI", y = "Liczba") +
theme(plot.title = element_text(size = 14, hjust = 0.5)),
tooltip = c("text"))
hist_ndvi_miedzyzdroje %>%
config(displayModeBar = FALSE)
hist_ndvi_miedzyzdroje <- hist_ndvi_miedzyzdroje %>%
config(displayModeBar = FALSE)
hist_ndvi_miedzyzdroje
# stworzenie histogramu NDVI dla WPN
hist_ndvi_wpn <- ggplotly(
ggplot_build(
ndvi_WPN_dt %>%
ggplot(aes(x=ndvi)) +
geom_histogram(bins = 40)
)$data[[1]] %>%
ggplot(aes(x=x, y = count, text = paste('<span style = " font-weight:bold"> Liczba: </span>',
'<span>', count ,'</span>',
'</br></br><span style = " font-weight:bold"> Wartość NDVI: </span>',
'<span>', round(x, 2) ,'</span>'))) +
geom_bar(stat="identity", fill = hcl.colors(40, palette = "RdYlGn")) + style +
labs(title = "Rozkład wartości wskaźnika NDVI dla WPN", x = "Wskaźnik NDVI", y = "Liczba") +
theme(plot.title = element_text(size = 14, hjust = 0.5)),
tooltip = c("text"))
hist_ndvi_wpn <- hist_ndvi_wpn %>%
config(displayModeBar = FALSE)
hist_ndvi_wpn
# stworzenie histogramu temperatury dla WPN
# hist_temp_WPN = ggplot(as.data.frame(temp_WPN_dt), aes(x = temp_WPN_dt)) +
#   geom_histogram(fill = hcl.colors(40, palette = "viridis"), bins = 40) +
#   labs(x = "Temperatura [°C]", y = "Liczba") +
#   theme(plot.title = element_text(hjust = 0.5, face = "bold")) + style
# ggplotly(hist_temp_WPN)
#
hist_temp_wpn <- ggplotly(
ggplot_build(
temp_WPN_dt %>%
ggplot(aes(x=temp)) +
geom_histogram(bins = 40)
)$data[[1]] %>%
ggplot(aes(x=x, y = count, text = paste('<span style = " font-weight:bold"> Liczba: </span>',
'<span>', count ,'</span>',
'</br></br><span style = " font-weight:bold"> Temperatura [°C]: </span>',
'<span>', round(x, 1) ,'</span>'))) +
geom_bar(stat="identity", fill = hcl.colors(40, palette = "viridis")) + style +
labs(title = "Rozkład wartości temperatury dla WPN", x = "Temperatura [°C]", y = "Liczba") +
theme(plot.title = element_text(size = 14, hjust = 0.5)),
tooltip = c("text"))
hist_temp_wpn <- hist_temp_wpn %>%
config(displayModeBar = FALSE)
hist_temp_wpn
hist_temp_miedzyzdroje <- ggplotly(
ggplot_build(
temp_miedzyzdroje_dt %>%
ggplot(aes(x=temp)) +
geom_histogram(bins = 40)
)$data[[1]] %>%
ggplot(aes(x=x, y = count, text = paste('<span style = " font-weight:bold"> Liczba: </span>',
'<span>', count ,'</span>',
'</br></br><span style = " font-weight:bold"> Temperatura [°C]: </span>',
'<span>', round(x, 1) ,'</span>'))) +
geom_bar(stat="identity", fill = hcl.colors(40, palette = "viridis")) + style +
labs(title = "Rozkład wartości temperatury dla Międzyzdrojów", x = "Temperatura [°C]", y = "Liczba") +
theme(plot.title = element_text(size = 14, hjust = 0.5)),
tooltip = c("text"))
hist_temp_miedzyzdroje <- hist_temp_miedzyzdroje%>%
config(displayModeBar = FALSE)
hist_temp_miedzyzdroje
dane_miasto <- round(temp_miedzyzdroje_dt, 1)
dane_miasto$ndvi <- round(ndvi_miedzyzdroje_dt$ndvi, 2)
object.size(dane_miasto)
# wyodrebnienie polowy danych ze wzgledu na zbyt duzy rozmiar pliku do eksportu
dane_miasto <- as.data.frame(dane_miasto)
dane_miasto <- dane_miasto[seq(1, nrow(dane_miasto), 3.2), ]
dane_miasto <- as.data.frame(dane_miasto)
colnames(dane_miasto) <- c("temp", "ndvi")
korelacja_miedzyzdroje <- ggplot(dane_miasto, aes(x = temp, y = ndvi, color = ndvi)) +
geom_point(shape = 21, size = 2, show.legend = FALSE) +
scale_x_continuous(breaks = c(20, 25, 30, 35)) +
geom_smooth(method = lm, color="darkred") +
labs(title = "Korelacja wskaźnika NDVI z temperaturą gruntu dla Międzydzrojów",
x = "Temperatura [°C]",
y = "NDVI") +
geom_abline(color = 'grey') +  style + scale_color_gradient2(midpoint=mean(dane_miasto$ndvi), low="#e63900", mid = "#ffff66",  high="#00802b")
korelacja_miedzyzdroje <- korelacja_miedzyzdroje %>%
style(text = paste('<span style = " font-weight:bold"> Wartość NDVI: </span>',
'<span style = " color:#ffffff">', dane_miasto$ndvi ,'</span>',
'</br></br><span style = "font-weight:bold"> Temperatura [°C]: </span>',
'<span style = " color:#ffffff">', dane_miasto$temp ,'</span>'), traces = 1) %>%
style(text = "linia regresji", traces = 2)
ggplotly(korelacja_miedzyzdroje)
korelacja_miedzyzdroje <- ggplotly(korelacja_miedzyzdroje) %>%
config(displayModeBar = FALSE)
korelacja_miedzyzdroje
dane_wpn<- round(temp_WPN_dt, 1)
dane_wpn$ndvi <- round(ndvi_WPN_dt$ndvi, 2)
object.size(dane_wpn)
# wyodrebnienie polowy danych ze wzgledu na zbyt duzy rozmiar pliku do eksportu
dane_wpn <- as.data.frame(dane_wpn)
dane_wpn <- dane_wpn[seq(1, nrow(dane_wpn), 45.5), ]
dane_wpn <- as.data.frame(dane_wpn)
colnames(dane_wpn) <- c("temp", "ndvi")
korelacja_wpn <- ggplot(dane_wpn, aes(x = temp, y = ndvi, color = ndvi)) +
geom_point(shape = 21, size = 2, show.legend = FALSE) +
labs(title = "Korelacja wskaźnika NDVI z temperaturą gruntu dla WPN",
x = "Temperatura [°C]",
y = "NDVI") +
geom_smooth(method = lm, color="darkred") +
geom_abline(color = 'grey') +  style + scale_color_gradient2(midpoint= mean(dane_miasto$ndvi), low="#e63900", mid = "#ffff66",  high="#00802b")
korelacja_wpn <- korelacja_wpn %>%
style(text = paste('<span style = " font-weight:bold"> Wartość NDVI: </span>',
'<span style = " color:#ffffff">', dane_wpn$ndvi ,'</span>',
'</br></br><span style = "font-weight:bold"> Temperatura [°C]: </span>',
'<span style = " color:#ffffff">', dane_wpn$temp ,'</span>'), traces = 1) %>%
style(text = "linia regresji", traces = 2)
korelacja_wpn <- ggplotly(korelacja_wpn) %>%
config(displayModeBar = FALSE)
korelacja_wpn
Sys.setenv("plotly_username" = "adryanqe")
Sys.setenv("plotly_api_key" = "BWYeEqc9Tcu65gh28WEw")
api_create(korelacja_miedzyzdroje, "Korelacja Miedzyzdroje")
api_create(korelacja_wpn, "Korelacja WPN")
api_create(hist_temp_miedzyzdroje, "Temperatura Miedzyzdroje")
api_create(hist_temp_wpn, "Temperatura WPN")
api_create(hist_ndvi_wpn, "NDVI WPN")
api_create(hist_ndvi_miedzyzdroje, "NDVI Miedzyzdroje")
hist_ndvi_miedzyzdroje
hist_temp_wpn
hist_temp_wpn <- ggplotly(
ggplot_build(
temp_WPN_dt %>%
ggplot(aes(x=temp)) +
geom_histogram(bins = 40)
)$data[[1]] %>%
ggplot(aes(x=x, y = count, text = paste('<span style = " font-weight:bold"> Liczba: </span>',
'<span>', count ,'</span>',
'</br></br><span style = " font-weight:bold"> Temperatura [°C]: </span>',
'<span>', round(x, 1) ,'</span>'))) +
geom_bar(stat="identity", fill = hcl.colors(40, palette = "viridis")) + style +
labs(title = "Rozkład wartości temperatury dla WPN", x = "Temperatura [°C]", y = "Liczba") +
theme(plot.title = element_text(size = 14, hjust = 0.5)),
tooltip = c("text")) %>%
config(displayModeBar = FALSE)
hist_temp_wpn
api_create(hist_temp_wpn, "Temperatura WPN")
hist_temp_wpn <- plot_ly(
ggplot_build(
temp_WPN_dt %>%
ggplot(aes(x=temp)) +
geom_histogram(bins = 40)
)$data[[1]] %>%
ggplot(aes(x=x, y = count, text = paste('<span style = " font-weight:bold"> Liczba: </span>',
'<span>', count ,'</span>',
'</br></br><span style = " font-weight:bold"> Temperatura [°C]: </span>',
'<span>', round(x, 1) ,'</span>'))) +
geom_bar(stat="identity", fill = hcl.colors(40, palette = "viridis")) + style +
labs(title = "Rozkład wartości temperatury dla WPN", x = "Temperatura [°C]", y = "Liczba") +
theme(plot.title = element_text(size = 14, hjust = 0.5)),
tooltip = c("text")) %>%
config(displayModeBar = FALSE)
# wczytanie rastrów
ndvi_miedzyzdroje <- raster("dane/miedzyzdroje_ndvi.tif")
temp_miedzyzdroje <- raster("dane/miedzyzdroje_temp.tif")
ndvi_WPN <- raster("dane/WPN_ndvi.tif")
temp_WPN <- raster("dane/WPN_temp.tif")
# podglad warstwy
tm_shape(ndvi_miedzyzdroje) + tm_raster()
